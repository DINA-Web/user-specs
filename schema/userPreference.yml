openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/AAFC/test/1.0.0
info:
  description: UserPreference schema
  version: "1.0.0"
  title: UserPreference schema
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /v1/user-preference:
    get:
      summary: Get user preferences
      operationId: getUserPreferences
      description: By passing in query string, user preference can get available user preferences authorised
      parameters:
        - in: query
          name: sort
          description: optional sort order string, such as descending, denoted by "-"
          schema:
            type: string
        - in: query
          name: page[offset]
          description: number of records to skip when paging
          schema:
            type: integer
            format: int32
        - in: query
          name: page[limit]
          description: maximum number of records to return when paging
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: user preferences satifying the query restrictions
          content:
            application/vnd.api+json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/UserPreference'                
        '404':
          description: user preference not found
    post:
      summary: Add user preference
      operationId: addUserPreference
      description: Add a user preference
      responses:
        '201':
          description: user preference created
        '422':
          description: Data integrity violation          
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/NewUserPreference'
        description: UserPreference to add
  /v1/user-preference/{Id}:
    get:
      summary: Find user preference by ID
      description: Return a single user preference
      operationId: getUserPreferenceById
      parameters:
        - name: Id
          in: path
          description: ID of user preference to return
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: successful operation
          content:
            application/vnd.api+json:
              schema:          
                $ref: '#/components/schemas/UserPreference'
        '400':
          description: Not a valid uuid                
        '404':
          description: UserPreference not found          
    patch:
      summary: Update user preference
      operationId: updateUserPreference
      description: Update a user preference
      parameters:
        - name: Id
          in: path
          description: user preference id to patch
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: user preference updated
        '400':
          description: invalid input, object invalid
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UserPreference'
        description: user preference to add
    delete:
      summary: Delete user preference
      operationId: deleteUserPreference
      description: Delete a user preference
      parameters:
        - name: Id
          in: path
          description: user preference id to delete
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: user preference marked as deleted
        '400':
          description: Not a valid uuid          
        '404':
          description: user preference not found       
components:
  schemas:
    UserPreference:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
          properties:
            id:
              type: integer
              description: Identifier of the object as an integer
          allOf:
            - $ref: '#/components/schemas/CommonUserPreference'

    NewUserPreference:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          allOf:
            - $ref: '#/components/schemas/CommonUserPreference'

    CommonUserPreference:
      type: object
      required:
        - type
        - attributes       
      properties:            
        type:
          enum: [user preference]      
          description: The type of data being returned.
        attributes:
          type: object
          properties:       
            userId:
              type: string
              format: uuid
              description: associated user's uuid                   
            uiPreference:
              type: object
              additionalProperties:
                type: string


